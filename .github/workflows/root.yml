name: Test & Build workflow (master/release)

on:
  push:
    branches:
      - 'master*'
      - 'release/**'

jobs:
  run_unit_testing_and_build_artefacts:
    name: Install node_modules & Run unit test scripts and generate coverge report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install node_modules & Run Unit test & Build artefacts
        working-directory: ${{ github.workspace }}
        run: |
          node -v
          npm -v
          npm install
          npm run test -- --coverage --watchAll=false
          npm run build
  sonarQubeTrigger:
    name: Quality gate - SonarQube
    runs-on: ubuntu-latest
    needs: run_unit_testing_and_build_artefacts
    steps:
      - uses: actions/checkout@master
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Generate unit-test coverage folder
        run: |
          npm install
          npm run test -- --coverage --watchAll=false
      - name: fix code coverage paths
        working-directory: ./coverage
        run: |
          sed -i 's/\/home\/runner\/work\/<your-repo-name>\/<your-repo-name>\//\/github\/workspace\//g' lcov.info
      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@master
        env:
          SONAR_HOST: ${{ secrets.SONAR_HOST }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          host: $SONAR_HOST
          login: $SONAR_TOKEN
  build_deploy_to_heroku:
    name: 'Heroku build and deploy'
    runs-on: ubuntu-latest
    env:
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
    needs: sonarQubeTrigger
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Copy files
        run: cp -r /home/runner/work/$HEROKU_APP_NAME-sample/$HEROKU_APP_NAME-sample/** /home/runner
      - name: Build, Push and Deploy to Heroku
        id: heroku
        uses: jctaveras/heroku-deploy@v1.0.0
        with:
          email: $HEROKU_EMAIL
          api_key: $HEROKU_API_KEY
          app_name: $HEROKU_APP_NAME
          dockerfile_path: /home/runner/work/$HEROKU_APP_NAME-sample/$HEROKU_APP_NAME-sample
  cypress-run:
    name: Cypress testing
    runs-on: ubuntu-16.04
    needs: build_deploy_to_heroku
    steps:
      - uses: actions/checkout@v1
      - uses: cypress-io/github-action@v2
        with:
          browser: chrome
          headless: true
