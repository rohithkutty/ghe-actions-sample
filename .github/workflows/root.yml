name: Test & Build workflow

on:
  push:
    branches:
      - master
      - release

jobs:
  # run-unit-testing-and-build-artefacts:
  #   name: Install node_modules & Run unit test scripts and generate coverge report
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Install node_modules & Run Unit test & Build artefacts
  #       working-directory: ${{ github.workspace }}
  #       run: |
  #         node -v
  #         npm -v
  # npm install
  # npm run test -- --coverage --watchAll=false
  #         npm run build
  # sonarQubeTrigger:
  #   name: Quality gate - SonarQube
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #       with:
  #         # Disabling shallow clone is recommended for improving relevancy of reporting
  #         fetch-depth: 0
  #     - name: Generate unit-test coverage folder
  #       run: |
  #         npm install
  #         npm run test -- --coverage --watchAll=false
  #     - name: SonarQube Scan
  #       uses: kitabisa/sonarqube-action@master
  #       with:
  #         host: ${{ secrets.SONAR_HOST }}
  #         login: ${{ secrets.SONAR_TOKEN }}
  # cypress-run:
  #   name: Cypress testing
  #   runs-on: ubuntu-16.04
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: cypress-io/github-action@v2
  #       with:
  #         browser: chrome
  #         headless: true
  # docker-build-and-push:
  #   name: Docker Build & push
  #   runs-on: ubuntu-16.04
  #   steps:
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/ghe-actions:latest
  build-deploy-to-heroku:
    name: 'Heroku build and deploy'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: List files
        run: |
          pwd
          ls -al
      - name: Build, Push and Deploy to Heroku
        id: heroku
        uses: jctaveras/heroku-deploy@v1.0.0
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          api_key: ${{ secrets.HEROKU_API_KEY }}
          app_name: ${{ secrets.HEROKU_APP_NAME }}
          dockerfile_path: '.'
