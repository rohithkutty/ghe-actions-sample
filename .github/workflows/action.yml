name: Test & Build workflow

on:
  - push

jobs:
  npm-dependency-check-unused-packages:
    name: Check Unused dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: packages check
        uses: Amr-Reda/npm-unused-packages-checker@v1
        with:
          IGNORE_PACKAGES: '["jade"]'
          IGNORE_PATTERNS: '["*.json"]'
  run-Eslint-quality-check:
    name: Run NPM eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Run NPM eslint
        uses: anna-money/github-actions-npm@v1
  prettier:
    name: Run prettier check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
      - name: Prettify code
        uses: creyD/prettier_action@v2.2
        with:
          # This part is also where you can pass other options, for example:
          prettier_options: --write **/*.{js,md}
  install-packages-and-run-unit-testing:
    name: Install node_modules & Run unit test scripts and generate coverge report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install node_modules & Run Unit test & generate coverage
        working-directory: ${{ github.workspace }}
        run: |
          node -v
          npm -v
          ls -al
          npm install
          npm run test -- --watchAll=false
  sonarQubeTrigger:
    name: Quality gate - SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Generate unit-test coverage folder
        working-directory: ${{ github.workspace }}
        run: |
          npm install
          npm run test -- --coverage --watchAll=false
          ls -al
      - name: SonarQube Scan
        working-directory: ${{ github.workspace }}
        uses: kitabisa/sonarqube-action@master
        with:
          host: ${{ secrets.SONAR_HOST }}
          login: ${{ secrets.SONAR_TOKEN }}
